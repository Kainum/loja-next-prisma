// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model User {
    id       Int    @id @default(autoincrement())
    name     String
    password String
    email    String @unique

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    orders Order[]

    @@map("users")
}

model Category {
    id   Int    @id @default(autoincrement())
    name String @unique
    url  String @unique

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    products Product[]

    @@map("categories")
}

model Product {
    id          Int    @id @default(autoincrement())
    name        String
    description String
    price       Float
    stock       Int
    url         String @unique
    image       String?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    category    Category @relation(fields: [category_id], references: [id])
    category_id Int

    items_from_orders OrderItem[]

    @@map("products")
}

enum OrderStatus {
    CART
    PAYMENT
    SHIPPING
    COMPLETE
    CANCELED
}

model Order {
    id     Int         @id @default(autoincrement())
    total  Float
    date   DateTime?
    status OrderStatus

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    user    User @relation(fields: [user_id], references: [id])
    user_id Int

    items OrderItem[]

    @@map("orders")
}

model OrderItem {
    id          Int   @id @default(autoincrement())
    item_price  Float
    quantity    Int
    // total_price Float

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    product    Product @relation(fields: [product_id], references: [id])
    product_id Int

    order    Order @relation(fields: [order_id], references: [id])
    order_id Int

    @@map("order_items")
}
